name: CI

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ] 

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}    

    steps:
    - uses: actions/checkout@v3
      with: 
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: add git credentials
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
  
    - name: Restore dependencies
      run: dotnet restore 
      
    - name: Build
      run: dotnet build  --no-restore --configuration Release
      
    - name: Test
      run: dotnet test --verbosity normal --logger "trx;LogFileName=test-results.trx"

    # - name: Upload Test Results
    #   uses: actions/upload-artifact@v2
    #   if: success() || failure()
    #   with:
    #     name: test-results
    #     path: test/UnitTest/TestResults/*.trx

    - name: Add dotnet tool
      run: dotnet tool install --global Versionize

    - name: Versionize
      run: versionize

    - name: get-version
      id: get-version
      run: echo "version=$(versionize inspect)" >> $GITHUB_OUTPUT

    - name: git push changelog
      run: git push --follow-tags

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    # add to github repository secrets:
    # DOCKERHUB_TOKEN
    # add to github repository variables:
    # DOCKERHUB_USERNAME
    # DOCKER_IMAGENAME
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Api Image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./src/WebApi/Dockerfile
        push: true
        tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGENAME }}:latest,${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGENAME }}:${{needs.build.outputs.version}}    
